//
//  KDSettingsViewController.swift
//  KitchenDisplay
//
//  Created by Wipro on 24/12/19.
//  Copyright (c) 2019 wipro. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol KDSettingsDisplayLogic: class
{
  func displaySomething(viewModel: KDSettings.Something.ViewModel)
}

class KDSettingsViewController: UIViewController, KDSettingsDisplayLogic
{
  var interactor: KDSettingsShowData?
  var router: (NSObjectProtocol & KDSettingsRoutingLogic & KDSettingsDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = KDSettingsInteractor()
    let presenter = KDSettingsPresenter()
    let router = KDSettingsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
    // ヘッダ領域
    @IBOutlet weak private var headerView: UIView!
    // タイトル
    @IBOutlet weak private var titleLabel: UILabel!
    // 設定項目表示領域
    @IBOutlet weak var settingTableView: UITableView!
    // フッタ領域
    @IBOutlet weak private var footerView: UIView!
    // [メイン画面に戻る]ボタン
    @IBOutlet weak private var backButton: UIButton!
    
    var displayedOrders: [KDSettings.Something.ViewModel.DisplayedOrder] = []
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = KDSettings.Something.Request()
    interactor?.fetchSettingsdata(request: request)
  }
  
  func displaySomething(viewModel: KDSettings.Something.ViewModel)
  {
    displayedOrders = viewModel.displayedOrders
    //settingTableView.reloadData()
    }
}

// MARK: UITableViewDataSource
extension KDSettingsViewController: UITableViewDataSource, UITableViewDelegate {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 4
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        // セルを取得する
        let cell = tableView.dequeueReusableCell(withIdentifier: "Cell1", for: indexPath)
        // 高さ情報を登録
        let displayedOrder = displayedOrders[indexPath.row]
        let rightLabel = cell.viewWithTag(1) as? UILabel
        let leftLabel = cell.viewWithTag(2) as? UILabel

        switch indexPath.section {
        case 0:
            rightLabel?.text = displayedOrder.elapsed_time_alert_blue
            leftLabel?.text = "Elapsed time alert(Blue)"
            
        case 1 :
            rightLabel?.text = displayedOrder.elapsed_time_alert_yellow
            leftLabel?.text = "Elapsed time alert(Yellow)"

        case 2:
            rightLabel?.text = displayedOrder.elapsed_time_alert_red
            leftLabel?.text = "Elapsed time alert(Red)"

        default:
            rightLabel?.text = displayedOrder.kitchen_printer_filtering
            leftLabel?.text = "Kitchen printer filtering"
        }
        
        titleLabel.text = displayedOrder.title
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 0
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 0
    }
    
}

